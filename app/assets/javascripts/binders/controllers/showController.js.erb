'use strict';

angular.module('binderApp')
  .controller('ShowController', [
      'notebook',
      'binder',
      'NotebookSvc',
      'DividerSvc',
      '$state',
      '$scope',
      function(notebook, binder, NotebookSvc, DividerSvc, $state, $scope) {
        var showCtrl = this;
        showCtrl.notebook = NotebookSvc.build(notebook);
        showCtrl.binder = binder
        showCtrl.notebooks = binder.notebooks

        showCtrl.notebooks.forEach(function(nb){
          if(nb.id === showCtrl.notebook.id){
            nb = showCtrl.notebook
          }
        })


        showCtrl.currentDivider = showCtrl.notebook.children[0];

        showCtrl.setCurrentDivider = function(divider){
          showCtrl.currentDivider = divider;
          divider.notes = divider.notes.sort(function(a,b){return parseInt(a.order) > parseInt(b.order)})
        }

        showCtrl.createNotebook = function(){
          var newNotebook = NotebookSvc.build({name: 'New Notebook', color_hex: binder.color_hex, binder_id: binder.id})
          newNotebook.$create(function(data){
            showCtrl.notebooks.push(newNotebook)
            $state.go('notebook', {binder_id: binder.id, id: data.id})
          });

        }

        showCtrl.updateNotebook = function(){
          // showCtrl.notebooks.forEach(function(nb){
          //   if(nb.id === showCtrl.notebook.id){
          //     setTimeout(function(){
          //       nb = showCtrl.notebook
          //     }, 500)
          //   }
            showCtrl.notebook.$save();
          // }
        }

        showCtrl.createDivider = function(parentId){
          DividerSvc.build({name: 'New Divider', parent_id: parentId})
        }
      }
  ]);
